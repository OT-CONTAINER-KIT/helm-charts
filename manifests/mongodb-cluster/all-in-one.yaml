---
# Source: mongodb-sharded/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-mongodb-sharded
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mongodb-root-password: "dFZkc1pUS3poWg=="
  mongodb-replica-set-key: "cnowT2gycWd4Vg=="
---
# Source: mongodb-sharded/templates/replicaset-entrypoint-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-mongodb-sharded-replicaset-entrypoint
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
data:
  replicaset-entrypoint.sh: |-
    #!/bin/bash

    sleep 5

    . /liblog.sh

    # Perform adaptations depending on the host name
    if [[ $HOSTNAME =~ (.*)-0$ ]]; then
      info "Setting node as primary"
      export MONGODB_REPLICA_SET_MODE=primary
    else
      info "Setting node as secondary"
      export MONGODB_REPLICA_SET_MODE=secondary
      export MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD="$MONGODB_ROOT_PASSWORD"
      unset MONGODB_ROOT_PASSWORD
    fi

    exec /entrypoint.sh /run.sh
---
# Source: mongodb-sharded/templates/headless-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb-mongodb-sharded-headless
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: mongodb
      port: 27017
  selector: 
    app.kubernetes.io/name: mongodb-sharded
    app.kubernetes.io/instance: mongodb
---
# Source: mongodb-sharded/templates/mongos/mongos-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mongodb-mongodb-sharded
  labels: 
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongos
  annotations:
    {}  
spec:
  type: ClusterIP
  ports:
    - name: mongodb
      port: 27017
      targetPort: mongodb
      nodePort: null
  selector: 
    app.kubernetes.io/name: mongodb-sharded
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/component: mongos
  sessionAffinity: None
---
# Source: mongodb-sharded/templates/mongos/mongos-dep-sts.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-mongodb-sharded-mongos
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mongos
spec:
  strategy:
    type: RollingUpdate
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-sharded
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/component: mongos
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-sharded
        helm.sh/chart: mongodb-sharded-3.4.6
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: mongos
    spec:
      serviceAccountName: "default"
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb-sharded
                    app.kubernetes.io/instance: mongodb
                    app.kubernetes.io/component: mongos
                namespaces:
                  - "non-prod"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      
      containers:
        - name: mongos
          image: docker.io/bitnami/mongodb-sharded:4.4.6-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: MONGODB_SHARDING_MODE
              value: "mongos"
            - name: MONGODB_MAX_TIMEOUT
              value: "120"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-replica-set-key
            - name: MONGODB_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: "$(MONGODB_POD_NAME)"
            - name: MONGODB_CFG_PRIMARY_HOST
              value: mongodb-mongodb-sharded-configsvr-0.mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local
            - name: MONGODB_CFG_REPLICA_SET_NAME
              value: mongodb-mongodb-sharded-configsvr
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          ports:
            - name: mongodb
              containerPort: 27017
          livenessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
---
# Source: mongodb-sharded/templates/config-server/config-server-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-mongodb-sharded-configsvr
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: configsvr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-sharded
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/component: configsvr
  serviceName: mongodb-mongodb-sharded-headless
  replicas: 1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-sharded
        helm.sh/chart: mongodb-sharded-3.4.6
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: configsvr
    spec:
      serviceAccountName: "default"
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb-sharded
                    app.kubernetes.io/instance: mongodb
                    app.kubernetes.io/component: configsvr
                namespaces:
                  - "non-prod"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      
      initContainers:
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb-sharded:4.4.6-debian-10-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_MAX_TIMEOUT
              value: "120"
            - name: MONGODB_SHARDING_MODE
              value: "configsvr"
            - name: MONGODB_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: mongodb-mongodb-sharded-configsvr-0.mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local
            - name: MONGODB_REPLICA_SET_NAME
              value: mongodb-mongodb-sharded-configsvr
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: "$(MONGODB_POD_NAME).mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-replica-set-key
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          command:
            - /bin/bash
            - /entrypoint/replicaset-entrypoint.sh
          livenessProbe:
            exec:
              command:
                - pgrep
                - mongod
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: replicaset-entrypoint-configmap
              mountPath: /entrypoint
            - name: datadir
              mountPath: /bitnami/mongodb
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: replicaset-entrypoint-configmap
          configMap:
            name: mongodb-mongodb-sharded-replicaset-entrypoint
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: mongodb-sharded/templates/shard/shard-data-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-mongodb-sharded-shard0-data
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shardsvr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-sharded
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/component: shardsvr
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  serviceName: mongodb-mongodb-sharded-headless
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-sharded
        helm.sh/chart: mongodb-sharded-3.4.6
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: shardsvr
        shard: "0"
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb-sharded
                    app.kubernetes.io/instance: mongodb
                    app.kubernetes.io/component: shardsvr
                namespaces:
                  - "non-prod"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: "default"
      securityContext:
        fsGroup: 1001
      
      initContainers:
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb-sharded:4.4.6-debian-10-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_MAX_TIMEOUT
              value: "120"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_SHARDING_MODE
              value: "shardsvr"
            - name: MONGODB_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGODB_MONGOS_HOST
              value: mongodb-mongodb-sharded
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: mongodb-mongodb-sharded-shard0-data-0.mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local
            - name: MONGODB_REPLICA_SET_NAME
              value: mongodb-mongodb-sharded-shard-0
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: "$(MONGODB_POD_NAME).mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-replica-set-key
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          command:
            - /bin/bash
            - /entrypoint/replicaset-entrypoint.sh
          livenessProbe:
            exec:
              command:
                - pgrep
                - mongod
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: replicaset-entrypoint-configmap
              mountPath: /entrypoint
            - name: datadir
              mountPath: /bitnami/mongodb
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: replicaset-entrypoint-configmap
          configMap:
            name: mongodb-mongodb-sharded-replicaset-entrypoint
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: mongodb-sharded/templates/shard/shard-data-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-mongodb-sharded-shard1-data
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shardsvr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-sharded
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/component: shardsvr
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  serviceName: mongodb-mongodb-sharded-headless
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-sharded
        helm.sh/chart: mongodb-sharded-3.4.6
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: shardsvr
        shard: "1"
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb-sharded
                    app.kubernetes.io/instance: mongodb
                    app.kubernetes.io/component: shardsvr
                namespaces:
                  - "non-prod"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: "default"
      securityContext:
        fsGroup: 1001
      
      initContainers:
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb-sharded:4.4.6-debian-10-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_MAX_TIMEOUT
              value: "120"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_SHARDING_MODE
              value: "shardsvr"
            - name: MONGODB_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGODB_MONGOS_HOST
              value: mongodb-mongodb-sharded
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: mongodb-mongodb-sharded-shard1-data-0.mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local
            - name: MONGODB_REPLICA_SET_NAME
              value: mongodb-mongodb-sharded-shard-1
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: "$(MONGODB_POD_NAME).mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-replica-set-key
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          command:
            - /bin/bash
            - /entrypoint/replicaset-entrypoint.sh
          livenessProbe:
            exec:
              command:
                - pgrep
                - mongod
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: replicaset-entrypoint-configmap
              mountPath: /entrypoint
            - name: datadir
              mountPath: /bitnami/mongodb
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: replicaset-entrypoint-configmap
          configMap:
            name: mongodb-mongodb-sharded-replicaset-entrypoint
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: mongodb-sharded/templates/shard/shard-data-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-mongodb-sharded-shard2-data
  labels:
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.4.6
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: shardsvr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb-sharded
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/component: shardsvr
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  serviceName: mongodb-mongodb-sharded-headless
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb-sharded
        helm.sh/chart: mongodb-sharded-3.4.6
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: shardsvr
        shard: "2"
    spec:
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mongodb-sharded
                    app.kubernetes.io/instance: mongodb
                    app.kubernetes.io/component: shardsvr
                namespaces:
                  - "non-prod"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      serviceAccountName: "default"
      securityContext:
        fsGroup: 1001
      
      initContainers:
      containers:
        - name: mongodb
          image: docker.io/bitnami/mongodb-sharded:4.4.6-debian-10-r0
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          ports:
            - containerPort: 27017
              name: mongodb
          env:
            - name: MONGODB_SYSTEM_LOG_VERBOSITY
              value: "0"
            - name: MONGODB_MAX_TIMEOUT
              value: "120"
            - name: MONGODB_DISABLE_SYSTEM_LOG
              value: "no"
            - name: MONGODB_SHARDING_MODE
              value: "shardsvr"
            - name: MONGODB_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MONGODB_MONGOS_HOST
              value: mongodb-mongodb-sharded
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: mongodb-mongodb-sharded-shard2-data-0.mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local
            - name: MONGODB_REPLICA_SET_NAME
              value: mongodb-mongodb-sharded-shard-2
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: "$(MONGODB_POD_NAME).mongodb-mongodb-sharded-headless.non-prod.svc.cluster.local"
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-root-password
            - name: MONGODB_REPLICA_SET_KEY
              valueFrom:
                secretKeyRef:
                  name: mongodb-mongodb-sharded
                  key: mongodb-replica-set-key
            - name: MONGODB_ENABLE_IPV6
              value: "no"
            - name: MONGODB_ENABLE_DIRECTORY_PER_DB
              value: "no"
          command:
            - /bin/bash
            - /entrypoint/replicaset-entrypoint.sh
          livenessProbe:
            exec:
              command:
                - pgrep
                - mongod
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongo
                - --disableImplicitSessions
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: replicaset-entrypoint-configmap
              mountPath: /entrypoint
            - name: datadir
              mountPath: /bitnami/mongodb
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
      volumes:
        - name: replicaset-entrypoint-configmap
          configMap:
            name: mongodb-mongodb-sharded-replicaset-entrypoint
  volumeClaimTemplates:
    - metadata:
        name: datadir
        annotations:
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
