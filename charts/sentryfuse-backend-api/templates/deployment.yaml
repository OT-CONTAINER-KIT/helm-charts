---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "base.fullname" . }}
  labels:
    {{- include "base.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "base.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "base.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.base.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.base.image.pullSecrets }}
      {{- end }}
      serviceAccountName: {{ include "base.serviceAccountName" . }}
      terminationGracePeriodSeconds: 120
      containers:
        - name: {{ include "base.fullname" . }}
          image: "{{ .Values.base.image.repository }}:{{ .Values.base.image.tag }}"
          imagePullPolicy: {{ .Values.base.image.pullPolicy }}
          {{- if .Values.base.image.command }}
          command:
            {{- toYaml .Values.base.image.command | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ (index .Values.service.ports 0).targetPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheck.statusPath }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheck.statusPath }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 3
          env:
            {{- range $key, $value := .Values.base.config }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          {{- if .Values.volumes }}
          volumeMounts:
            {{- range .Values.volumes.configMaps }}
            - mountPath: {{ .mountPath }}
              name: {{ .name }}-volume
            {{- end }}
          {{- end }}
      {{- if .Values.volumes }}
      volumes:
        {{- range .Values.volumes.configMaps }}
        - name: {{ .name }}-volume
          configMap:
            name: {{ .name }}
        {{- end }}
      {{- end }}
