---
redisOperator:
  name: redis-operator
  imageName: quay.io/opstree/redis-operator
  # Overrides the image tag whose default is the chart appVersion.
  imageTag: ""
  imagePullPolicy: Always

  # Additional pod annotations
  podAnnotations: {}
  # Additional Pod labels (e.g. for filtering Pod by custom labels)
  podLabels: {}

  # Additional arguments for redis-operator container
  extraArgs: []

  #  - -zap-log-level=error
  watch_namespace: ""
  env: []
  webhook: false


resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 500m
    memory: 500Mi

replicas: 1

serviceAccountName: redis-operator

service:
  name: webhook-service
  namespace: redis-operator

certificate:
  name: serving-cert
  secretName: webhook-server-cert

issuer:
  type: selfSigned
  name: redis-operator-issuer
  email: shubham.gupta@opstree.com
  server: https://acme-v02.api.letsencrypt.org/directory
  privateKeySecretName: letsencrypt-prod
  solver:
    enabled: true
    ingressClass: nginx

certmanager:
  # Turns on the chart dependency on cert-manager and will install it in the cluster
  install: false
  # Hands over certificate creation and management to cert-manager by creating cert-manager CRs. 
  # It's your responsibility to make sure the CRs are compatible with the installed cert-manager
  # if certmanager.install is disabled (default). If you're using a incompatible version of 
  # cert-manager you can always turn this off (default) and provide your own cert-manager CRs to
  # create a certificate and save it to the secret defined by certificate.secretName.
  enabled: false

priorityClassName: ""
nodeSelector: {}
tolerateAllTaints: false
tolerations: []
affinity: {}
