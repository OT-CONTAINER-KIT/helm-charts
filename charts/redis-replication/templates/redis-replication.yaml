---
apiVersion: redis.redis.opstreelabs.in/v1beta1
kind: RedisReplication
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: middleware
    app.kubernetes.io/part-of : {{ .Release.Name }}
{{- if .Values.labels }}
{{- range $labelkey, $labelvalue := .Values.labels }}
    {{ $labelkey}}: {{ $labelvalue }}
{{- end }}
{{- end }}
spec:
  clusterSize: {{ .Values.redisReplication.clusterSize }}  
  kubernetesConfig:
    image: "{{ .Values.redisReplication.image }}:{{ .Values.redisReplication.tag }}"
    imagePullPolicy: "{{ .Values.redisReplication.imagePullPolicy }}"
    resources:
{{ toYaml .Values.redisReplication.resources | indent 6 }}
{{- with .Values.redisReplication.redisSecret }}
{{- if and .secretName .secretKey }}
    redisSecret:
      name: "{{ .secretName | trim }}"
      key: "{{ .secretKey | trim }}"
{{- end }}
{{- end }}
# Redis Exporter Specs
  redisExporter:
    enabled: {{ .Values.redisExporter.enabled }}
    image: "{{ .Values.redisExporter.image }}"
    imagePullPolicy: "{{ .Values.redisExporter.imagePullPolicy }}"
    resources:
{{ toYaml .Values.redisExporter.resources | indent 6 }}
    {{- with .Values.redisExporter.env }}
    env:
{{ toYaml . | indent 6 }}
    {{- end }}
{{- if eq .Values.externalConfig.enabled true }}
# Redis Config 
  redisConfig:
    additionalRedisConfig: {{ .Release.Name }}-ext-config
{{- end }}
# Storage Specs
{{- with .Values.storageSpec }}
storage:
  {{- if .volumeClaimTemplate }}
  volumeClaimTemplate: 
{{ toYaml .volumeClaimTemplate | indent 4 }}
  {{- end }}
  {{- if .volumeMount }}
  volumeMount: 
{{ toYaml .volumeMount | indent 4 }}
  {{- end }}
{{- end }}
# Node Selector
{{- if .Values.nodeSelector }}
  nodeSelector:
  {{- range $key, $value := .Values.nodeSelector }}
    {{ $key | quote }}: {{ $value | quote }}
  {{- end }}
{{- end }}
# Pod Security Context and Security Context
{{- if .Values.podSecurityContext }}
  podSecurityContext:
{{ toYaml .Values.podSecurityContext | indent 4 }}
{{- end }}
{{- if .Values.securityContext }}
{{- if ne (len .Values.securityContext) 0 }}
  securityContext: {{- toYaml .Values.securityContext | nindent 2 }}
{{- end }}
{{- end }}
{{- if and .Values.priorityClassName (ne .Values.priorityClassName "") }}
  priorityClassName: "{{ .Values.priorityClassName }}"
{{- end }}
# Affinity and Tolerations
{{- if .Values.affinity }}
  affinity:
{{ toYaml .Values.affinity | indent 4 }}
{{- end }}
{{- if .Values.tolerations }}
  tolerations:
  {{- range .Values.tolerations }}
    - key: {{ .key | quote }}
      operator: {{ .operator | quote }}
      value: {{ .value | quote }}
      effect: {{ .effect | quote }}
  {{- end }}
{{- end }}
{{- if and .Values.TLS.enabled .Values.TLS.ca .Values.TLS.cert .Values.TLS.key .Values.TLS.secret.secretName }}
TLS:
  ca: {{ .Values.TLS.ca | quote }}
  cert: {{ .Values.TLS.cert | quote }}
  key: {{ .Values.TLS.key | quote }}
  secret:
    secretName: {{ .Values.TLS.secret.secretName | quote }}
{{- end }}
{{- if and .Values.acl.enabled .Values.acl.secret }}
acl:
  secret: {{ .Values.acl.secret | quote }}
{{- end }}
{{- if eq .Values.readinessProbe.enabled true }}
  readinessProbe:
    initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
    timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
    periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
    successThreshold: {{ .Values.readinessProbe.successThreshold }}
    failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
{{- end }}
{{- if eq .Values.livenessProbe.enabled true }}
  livenessProbe:
    initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
    timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
    periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
    successThreshold: {{ .Values.livenessProbe.successThreshold }}
    failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
{{- end }}
# Init Container Specs and Sidecar Specs
{{- with .Values.initContainer }}
{{- if .enabled }}
# Init Container Specs
initContainer:
  image: {{ .image | quote }}
  imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
  {{- with .resources }}
  resources:
{{ toYaml . | indent 4 }}
  {{- end }}
  {{- with .env }}
  env:
{{ toYaml . | indent 4 }}
  {{- end }}
  {{- with .command }}
  command:
{{ toYaml . | indent 4 }}
  {{- end }}
  {{- with .args }}
  args:
{{ toYaml . | indent 4 }}
  {{- end }}
{{- end }}
{{- end }}
# Sidecar Specs
{{- if .Values.sidecars }}
  sidecars:
{{ toYaml .Values.sidecars | indent 4 }}
{{- end }}
  serviceAccountName: "{{ .Release.Name }}"
{{- if ne .Values.redisCluster.leader.terminationGracePeriodSeconds 0 }}
  terminationGracePeriodSeconds: {{ .Values.redisCluster.leader.terminationGracePeriodSeconds }}
{{- end }}
# Additional Env Variables
{{- if .Values.env }}
{{- if gt (len .Values.env) 0 }}
  env:
  {{ toYaml .Values.env | indent 2 }}
{{- end }}
{{- end }}
---