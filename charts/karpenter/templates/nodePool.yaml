apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: {{ .Values.nodePools.name }}
spec:
  template:
    metadata:
      # Labels - This will loop over and add all labels specified in values.yaml
      labels:
{{- if .Values.nodePools.labels }}
{{- range $key, $value := .Values.nodePools.labels }}
        {{ $key }}: {{ $value }}
{{- end }}
{{- else }}
        {} # Empty labels object if no labels are defined
{{- end }}
      # Annotations - This will loop over and add all annotations specified in values.yaml
      annotations:
{{- if .Values.nodePools.annotations }}
{{- range $key, $value := .Values.nodePools.annotations }}
        {{ $key }}: {{ $value }}
{{- end }}
{{- else }}
        {} # Empty annotations object if no annotations are defined
{{- end }}

    spec:
      requirements:
{{- if .Values.nodePools.requirements | len }}
{{- range .Values.nodePools.requirements }}
        - key: {{ .key }}
          operator: {{ .operator }}
          values:
{{ toYaml .values | indent 12 }}
{{- if .minValues }}
          minValues: {{ .minValues }}
{{- end }}
{{- end }}
{{- else }}
        [] # In case requirements is empty, an empty array will be passed
{{- end }}

      taints:
{{- if .Values.nodePools.taints }}
{{- range .Values.nodePools.taints }}
        - key: {{ .key }}
          {{- if .value }}
          value: {{ .value }}
          {{- end }}
          effect: {{ .effect }}
{{- end }}
{{- else }}
        [] # Empty taints array if no taints are defined
{{- end }}

      nodeClassRef:
        group: {{ .Values.nodePools.nodeClass.group | default "karpenter.k8s.aws" }}
        kind: {{ .Values.nodePools.nodeClass.kind | default "EC2NodeClass" }}
        name: {{ .Values.nodePools.nodeClass.name }}
      expireAfter: {{ .Values.nodePools.expireAfter | default "720h" }}

  limits:
{{- if .Values.nodePools.limits.cpu }}
    cpu: {{ .Values.nodePools.limits.cpu }}
{{- end }}
{{- if .Values.nodePools.limits.memory }}
    memory: {{ .Values.nodePools.limits.memory }}
{{- end }}

  disruption:
    consolidationPolicy: {{ .Values.nodePools.disruption.consolidationPolicy | default "WhenEmptyOrUnderutilized" }}
    consolidateAfter: {{ .Values.nodePools.disruption.consolidateAfter | default "1m" }}
