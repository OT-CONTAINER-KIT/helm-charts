# Custom values for your chart
clusterName: demo-eks
awsPartition: aws
awsAccountId: 384961893048
karpenterVersion: 1.1.1

# Karpenter chart overrides
karpenter:
  settings:
    clusterName: demo-eks
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::384961893048:role/KarpenterControllerRole-demo-eks
  controller:
    resources:
      requests:
        cpu: "1"
        memory: "1Gi"
      limits:
        cpu: "1"
        memory: "1Gi"

nodePools:
  - name: default
    requirements:
      - key: kubernetes.io/arch
        operator: In
        values:
          - "amd64"
      - key: kubernetes.io/os
        operator: In
        values:
          - "linux"
      - key: karpenter.sh/capacity-type
        operator: In
        values:
          - "on-demand"
      - key: karpenter.k8s.aws/instance-category
        operator: In
        values:
          - "t"
          - "m"
          - "r"
        minValues: 2
      - key: karpenter.k8s.aws/instance-family
        operator: Exists
        minValues: 5
      - key: karpenter.k8s.aws/instance-family
        operator: In
        values:
          - "m5"
          - "m5d"
          - "c5"
          - "c5d"
          - "c4"
          - "r4"
        minValues: 3
      - key: node.kubernetes.io/instance-type
        operator: Exists
        minValues: 10
      - key: karpenter.k8s.aws/instance-generation
        operator: Gt
        values:
          - "2"
    nodeClass:
      group: karpenter.k8s.aws
      kind: EC2NodeClass
      name: default
    expireAfter: 720h
    limits:
      cpu: "1000"
      memory: "1000Gi"
    disruption:
      consolidationPolicy: WhenEmptyOrUnderutilized
      consolidateAfter: 1m
    annotations:
      example.com/owner: "my-team"
      example.com/maintainer: "admin@company.com"

  - name: default1
    requirements:
      - key: kubernetes.io/arch
        operator: In
        values:
          - "amd64"
      - key: kubernetes.io/os
        operator: In
        values:
          - "linux"
      - key: karpenter.sh/capacity-type
        operator: In
        values:
          - "on-demand"
      - key: karpenter.k8s.aws/instance-category
        operator: In
        values:
          - "t"
          - "m"
          - "r"
        minValues: 2
      - key: karpenter.k8s.aws/instance-family
        operator: Exists
        minValues: 5
      - key: karpenter.k8s.aws/instance-family
        operator: In
        values:
          - "m5"
          - "m5d"
          - "c5"
          - "c5d"
          - "c4"
          - "r4"
        minValues: 3
      - key: node.kubernetes.io/instance-type
        operator: Exists
        minValues: 10
      - key: karpenter.k8s.aws/instance-generation
        operator: Gt
        values:
          - "2"
    nodeClass:
      group: karpenter.k8s.aws
      kind: EC2NodeClass
      name: default1
    expireAfter: 720h
    limits:
      cpu: "1000"
      memory: "1000Gi"
    disruption:
      consolidationPolicy: WhenEmptyOrUnderutilized
      consolidateAfter: 1m
    annotations:
      example.com/owner: "my-team"
      example.com/maintainer: "admin@company.com"
