---
redisSentinel:
  clusterSize: 3
  image: quay.io/opstree/redis
  tag: v7.0.12
  imagePullPolicy: Always
  redisSecret:
    secretName: ""
    secretKey: ""
  serviceType: ClusterIP
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi

labels: {}
  # foo: bar
  # test: echo

annotations: {}
  # foo: bar
  # test: echo

redisSentinelConfig:
  redisReplicationName: "redis-replication"
  # masterGroupName:
  # redisPort:
  # quorum:
  # parallelSyncs:
  # failoverTimeout:
  # downAfterMilliseconds:

externalConfig:
  enabled: false
  data: |
    tcp-keepalive 400
    slowlog-max-len 158
    stream-node-max-bytes 2048

externalService:
  enabled: false
  # annotations:
  #   foo: bar
  serviceType: NodePort
  port: 6379

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  namespace: monitoring

redisExporter:
  enabled: true
  image: quay.io/opstree/redis-exporter:"v1.44.0"
  imagePullPolicy: IfNotPresent
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
  env : []

initContainer:
  enabled: false  
  image: ""
  imagePullPolicy: "IfNotPresent"
  resources: {}
    # requests:
    #   memory: "64Mi"
    #   cpu: "250m"
    # limits:
    #   memory: "128Mi"
    #   cpu: "500m"
  env: []
  command: []
  args: []

sidecars: []
  # - name: "sidecar1"
  #   image: "image:1.0"
  #   imagePullPolicy: Always
  #   resources:
  #     limits:
  #       cpu: 50m
  #       memory: 64Mi
  #     requests:
  #       cpu: 10m
  #       memory: 32M
  #   env:
  #   - name: VAR_NAME
  #     value: "value1"

priorityClassName: ""

# imagePullSecrets:
#  - name: regcred

nodeSelector: {}
  # memory: medium

storageSpec:
  volumeClaimTemplate:
    spec:
      # storageClassName: standard
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
  volumeMount : 
    volume : []
    mountPath : []

podSecurityContext:
  runAsUser: 1000
  fsGroup: 1000

securityContext: {}

affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: disktype
  #         operator: In
  #         values:
  #         - ssd

tolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

TLS:
  enabled: false
  ca: ca.key
  cert: tls.crt
  key: tls.key
  secret:
    secretName: redis-tls-cert

acl : 
  enabled: false
  secret : ""


readinessProbe:
  enabled: false
  initialDelaySeconds: 15
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3

livenessProbe:
  enabled: false
  initialDelaySeconds: 15
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3


terminationGracePeriodSeconds: 0

env : []
  # - name: VAR_NAME
  #   value: "value1"