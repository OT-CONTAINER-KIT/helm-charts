{{ $root := . }}
---
apiVersion: {{ include "microservice.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "microservice.fullname" . }}-app
  namespace: {{ .Values.global.namespace | quote }}
  {{- if .Values.deployment.annotations }}
  annotations:
  {{- range $key, $value := .Values.deployment.annotations }}
    {{ $key }}: {{ $value }}
  {{- end }}
  {{- end }}
  labels:
    {{- include "microservice.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  {{- if .Values.deployment.strategy }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  {{- end }}
  terminationGracePeriodSeconds: {{ .Values.deployment.terminationGracePeriodSeconds }}
  selector:
    matchLabels:
      {{- include "microservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "microservice.selectorLabels" . | nindent 8 }}
      {{- if .Values.deployment.podAnnotations }}
      annotations:
      {{- range $key, $value := .Values.deployment.podAnnotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "microservice.serviceAccountName" . }}
      containers:
        - name: {{ include "microservice.fullname" . }}
          image: "{{ .Values.deployment.image.name }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          {{- if .Values.deployment.command }}
          command: {{ .Values.deployment.command }}
          {{- end }}
          {{- if .Values.deployment.args }}
          args: {{ .Values.deployment.args }}
          {{- end }}
          ports:
            {{- range .Values.service.specs}}
            - name: {{ .name }}
              containerPort: {{ .targetPort | default .port}}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          {{- if (merge .Values.global.environment .Values.deployment.environment) }}
          env:
          {{- range $name, $value := merge .Values.global.environment .Values.deployment.environment}}
          - name: {{ $name | quote}}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- if and .Values.deployment.healthProbes.enabled .Values.deployment.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.deployment.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if and .Values.deployment.healthProbes.enabled .Values.deployment.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.deployment.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          {{- if .Values.deployment.volumes.enabled }}
          volumeMounts:
            {{- range $conf := .Values.deployment.volumes.configMaps }}
            - mountPath: {{ $conf.mountPath }}
              name: {{ include "microservice.fullname" $root }}-{{ $conf.name }}-cm
            {{- end }}
            {{- if .Values.deployment.volumes.pvc.enabled }}
            - mountPath: {{ .Values.volumes.pvc.mountPath }}
              name: {{ .Values.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}-volume
            {{- end }}
          {{- end }}
      {{- if .Values.deployment.volumes.enabled }}
      volumes:
        {{- range $conf := .Values.deployment.volumes.configMaps }}
        - name: {{ include "microservice.fullname" $root }}-{{ $conf.name }}-cm
          configMap:
            name: {{ include "microservice.fullname" $root }}-{{ $conf.name }}-cm
      {{- end }}
      {{- if .Values.deployment.volumes.pvc.enabled}}
        - name: {{ .Values.deployment.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}-volume
          persistentVolumeClaim:
            claimName: {{ .Values.deployment.volumes.pvc.existing_claim | default .Values.volumes.pvc.name }}
      {{- end}}
      {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
           {{- if .Values.deployment.affinity.enabled }}
      affinity:
        {{- if or .Values.deployment.affinity.preferred.enabled .Values.deployment.affinity.required.enabled }}
        podAntiAffinity:
          {{- if .Values.deployment.affinity.preferred.enabled }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ include "microservice.fullname" . }}
              topologyKey: {{ .Values.deployment.affinity.topologyKey }}
          {{- end }}
          {{- if .Values.deployment.affinity.required.enabled }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: {{ include "microservice.fullname" . }}-app
            topologyKey: {{ .Values.deployment.affinity.topologyKey }}
          {{- end }}
        {{- end }}
        {{- if .Values.deployment.topologySpreadConstraints.enabled }}
        topologySpreadConstraints:
          - maxSkew: 1
            topologyKey: {{ .Values.deployment.topologySpreadConstraints.topologyKey }}
            whenUnsatisfiable: "{{ .Values.deployment.topologySpreadConstraints.whenUnsatisfiable }}"
            labelSelector:
              matchLabels:
                app: {{ include "microservice.fullname" . }}
            minDomains: 2
        {{- end }}
      {{- end }}
   
