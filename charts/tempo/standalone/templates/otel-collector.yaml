apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry
  namespace: observability
spec:
  mode: deployment
  resources:
    requests:
      cpu: 300m
      memory: 300Mi
    limits:
      cpu: 300m
      memory: 300Mi
  autoscaler:
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilization: 80
    targetMemoryUtilization: 80

  config:
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318

    exporters:
      otlp:
        endpoint: tempo:4317
        tls:
          insecure: true
      prometheus:
        endpoint: "0.0.0.0:8889"
      debug: {}

    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 75
        spike_limit_percentage: 15
      batch:
        send_batch_size: 10000
        timeout: 10s

    connectors:
      spanmetrics:
        dimensions:
          - name: http.method
          - name: http.status_code
          - name: http.route
        exemplars:
          enabled: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [debug, otlp ,spanmetrics]
        metrics:
          receivers: [spanmetrics, otlp]
          processors: [memory_limiter, batch]
          exporters: [prometheus, debug]

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: otel-collector-trace-metrics
    prometheus: kube
    release: monitoring
  name: otel-collector-trace-metrics
  namespace: observability
spec:
  endpoints:
    - interval: 10s
      path: /metrics
      targetPort: 8889
  namespaceSelector:
    matchNames:
      - observability
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-collector
      operator.opentelemetry.io/collector-service-type: base